<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
<link rel="stylesheet" href="styles/style.css" media="all">
<link rel="stylesheet" href="styles/pag-prods.css">
<link rel="stylesheet" href="styles/medias.css">
<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<style>
    .carrinho-vazio {
        width: fit-content;
        position: absolute;
        left: 40%;

    }
    .carrinho-vazio > h1 {
        font-size: 16px;
        color: #D9D9D9;
        text-align: center;
    }
    .carrinho-vazio > p {
        font-size: 12px;
        color: #D9D9D9;
        text-align: center;
    }
    .carrinho-vazio > a {
        border: 1px solid #F37160;
        padding: 0.7em 1.2em;
        text-decoration: none;
        color: #EF4126;
        border-radius: 5px;
        position: absolute;
        top: 102%;
        left: 34%;
    }
    .produto-carrinho {
        color: #212529;
        height: 192px;
        margin: 72px;
    }
    .produto-carrinho > img {
        width: 10%;
    }
    .produto-carrinho > h2 {
        font-size: 20px;
        width: fit-content;
        position: relative;
        top: -162px;
        left: 14%;
    }
    .produto-carrinho > .qnt {
        font-size: 14px;
        width: fit-content;
        position: relative;
        top: -150px;
        left: 14%;
    }
    .produto-carrinho > .vlr {
        font-size: 14px;
        width: fit-content;
        position: relative;
        top: -145px;
        left: 14%;
    }
    .produto-carrinho > .sub {
        font-size: 14px;
        width: fit-content;
        position: relative;
        top: -140px;
        left: 14%;
    }
    .produto-carrinho > .remover-produto {
        background-color: white;
        border: none;
        font-size: 13px;
        cursor: pointer;
        color: #EF4126;
        position: relative;
        top: -270px;
        left: 29%;
    }
    .produto-carrinho > .remover-produto:hover {
        text-decoration: underline;
    }
    #resumo-compra {
        width: 20%;
        color: #222529;
        height: 20%;
        position: relative;
        left: 76%;
    }
    #resumo-compra > h2 {
        font-size: 25px;
        font-weight: normal;
    }
    #resumo-compra > p,span,a {
        font-size: 14px;
        font-weight: normal;
        margin: 20px 0px 20px 0px;
    }
    #resumo-compra > a {
        padding: 8px 28px 8px 28px;
    }
    .lnk-volt {
        border: 1px solid #EF4126;
        color: #F37160;
        text-decoration: none;
    }
.lnk-av {
    background-color: #EF4126;
    color: white;
    text-decoration: none;
    position: fixed;
    bottom: 50px;
    right: 6%;
    cursor: pointer;
    padding: 18px 28px 18px 28px;
    border: none;
    font-weight: bold;
}
li {
    list-style: none;
}
.logo-imprimeai {
    position: relative;
    top: -39px;
    left: 41%;
    width: fit-content;
}
header > h1 {
    position: relative;
    top: -110px;
    left: 41%;
    width: fit-content;
}
.escLocBtn {
    background-color: #EF4126;
    color: white;
    text-decoration: none;
    padding: 8px 28px 8px 28px;
    position: relative;
    top: -180px;
    left: 30%;
}
form#dados-entrega {
    width: 733px;
    position: absolute;
    top: 107px;
    left: 50%;
    padding: 10px;
    border: 1px solid #ddd;
    background-color: #fff;
}
form.formulario-entrega {
    position: relative;
    top: -607px;
    left: 109px;
    margin-bottom: -27px;
}
.input-container > input {
    width: 580px;
    height: 60px;
    text-indent: 20px;
    margin: 10px;
    position: relative;
    left: -9px;
}
h1#formH1 {
    font-size: 27px;
}
div#conteudo {
    position: relative;
    left: 30%;
    width: 61%;
}
img {
    position: relative;
    left: -33%;
    top: 300px;
    width: 17%;
    margin: 72px;
}
header > p {
    position: relative;
    top: -93px;
    left: 40%;
    font-size: 14px;
    letter-spacing: 0.4px;
    width: fit-content;
}
.input-container {
    width: 61%;
}
</style>
<body>
    <header>
        <img class="logo-imprimeai" src="../images/logo-imprimeai2.PNG" alt="...">
        <h1>Multiplos Endereços</h1>
        <p>Utilize a opção de Entrega em Múltiplos Endereços</p>
    </header>
    <main>
        <div id="carrinhoProdutos">
            <!-- Os produtos do carrinho serão listados aqui -->
        </div>
        <div id="resumo-compra" style="display: none;">
            <!--<button id="salvarTodosBtn" class="lnk-av">Salvar Todos</button>-->
        </div>
        <div id="conteudo">

        </div>
        <button id="salvarTodosBtn" class="lnk-av">Salvar Todos</button>
    </main>
    <span id="voltar_ao_topo" class="material-icons">expand_less</span>
    <!--<script src="scripts/slider.js"></script>-->
    <script>
        document.addEventListener('DOMContentLoaded', async function () {
            let formularioAberto = false;

            async function carregarProdutosCarrinho() {
                try {
                    const response = await fetch('/api/carrinho');

                    if (!response.ok) {
                        throw new Error('Erro ao obter os dados do carrinho');
                    }

                    const produtos = await response.json();
                    const carrinhoProdutos = document.getElementById('carrinhoProdutos');
                    const resumoCompra = document.getElementById('resumo-compra');
                    const conteudo = document.getElementById('conteudo');

                    carrinhoProdutos.innerHTML = '';
                    resumoCompra.style.display = 'none';
                    conteudo.innerHTML = '';

                    if (produtos.length === 0) {
                        carrinhoProdutos.innerHTML = `
                            <div class="carrinho-vazio">
                            
                            </div>
                        `;
                    } else {
                        produtos.forEach(produto => {
                            criarFormularioEntrega(produto);
                        });

                        resumoCompra.style.display = 'block';
                        conteudo.style.display = 'block';

                        const salvarTodosBtn = document.getElementById('salvarTodosBtn');
                        salvarTodosBtn.addEventListener('click', function () {
                            salvarTodosFormularios(produtos);
                        });
                    }
                } catch (error) {
                    console.error('Erro ao carregar produtos do carrinho:', error);
                }
            }

            function criarFormularioEntrega(produto) {
            const formulario = document.createElement('form');
            formulario.classList.add('formulario-entrega');
            formulario.style.display = 'block';

            const imgProduto = document.createElement('img');
            imgProduto.src = `/imagens/${produto.produtoId}`;
            imgProduto.alt = `Imagem do Produto ${produto.nomeProd}`;
            formulario.appendChild(imgProduto);

            const h1 = document.createElement('h1');
            h1.innerHTML = `Escolha o local de entrega para <br> cada Unidade de ${produto.nomeProd}`;
            formulario.appendChild(h1);

            for (let i = 0; i < produto.quantidade; i++) {
                const divContainer = document.createElement('div');
                divContainer.classList.add('input-container');

                const inputLocalEntrega = document.createElement('input');
                inputLocalEntrega.type = 'text';
                inputLocalEntrega.name = `localEntrega_${produto.produtoId}_${i + 1}`;
                inputLocalEntrega.id = `localEntrega_${produto.produtoId}_${i + 1}`;
                inputLocalEntrega.placeholder = 'Digite a Rua...';
                inputLocalEntrega.size = 25;

                const inputQuantidade = document.createElement('input');
                inputQuantidade.type = 'number';
                inputQuantidade.name = `quantidadeEntrega_${produto.produtoId}_${i + 1}`;
                inputQuantidade.id = `quantidadeEntrega_${produto.produtoId}_${i + 1}`;
                inputQuantidade.placeholder = '';
                inputQuantidade.min = 0;
                inputQuantidade.max = produto.quantidade; // Se desejar permitir que o usuário escolha a quantidade, ajuste conforme necessário
                inputQuantidade.setAttribute('style', 'position: relative;left:-2%; width: 7%; top:0px');

                const inputNumero = document.createElement('input');
                inputNumero.type = 'text';
                inputNumero.name = `numeroEndereco_${produto.produtoId}_${i + 1}`;
                inputNumero.id = `numeroEndereco_${produto.produtoId}_${i + 1}`;
                inputNumero.size = 25
                inputNumero.placeholder = 'Digite o Número de sua Residencia...';

                const inputComplemento = document.createElement('input');
                inputComplemento.type = 'text';
                inputComplemento.name = `complemento_${produto.produtoId}_${i + 1}`;
                inputComplemento.id = `complemento_${produto.produtoId}_${i + 1}`;
                inputComplemento.size = 25;
                inputComplemento.placeholder = 'Digite o Complemento de sua Residencia...'

                const inputCep = document.createElement('input');
                inputCep.type = 'text';
                inputCep.name = `cep_${produto.produtoId}_${i + 1}`;
                inputCep.id = `cep_${produto.produtoId}_${i + 1}`;
                inputCep.size = 25
                inputCep.placeholder = 'Digite o Cep...';
                inputCep.maxLength = 10;   

                const inputCidade = document.createElement('input');
                inputCidade.type = 'text'; 
                inputCidade.name = `cidade_${produto.produtoId}_${i + 1}`;
                inputCidade.id = `cidade_${produto.produtoId}_${i + 1}`;
                inputCidade.size = 25;
                inputCidade.placeholder = 'Digite a Cidade...';

                const inputEstado = document.createElement('input');
                inputEstado.type = 'text'; 
                inputEstado.name = `estado_${produto.produtoId}_${i + 1}`;
                inputEstado.id = `estado_${produto.produtoId}_${i + 1}`;
                inputEstado.size = 25;
                inputEstado.placeholder = 'Digite o Estado...';

                const inputBairro = document.createElement('input');
                inputBairro.type = 'text'; 
                inputBairro.name = `bairro_${produto.produtoId}_${i + 1}`;
                inputBairro.id = `bairro_${produto.produtoId}_${i + 1}`;
                inputBairro.size = 25;
                inputBairro.placeholder = 'Digite o Bairro...';
                inputBairro.setAttribute('style', 'margin-bottom: 60px;')

                // Tornar apenas o primeiro input obrigatório
                inputLocalEntrega.required = i === 0;
                inputQuantidade.required = i === 0;
                inputNumero.required = i === 0;
                inputCep.required = i === 0;
                inputCidade.required = i === 0;
                inputEstado.required = i === 0;

                divContainer.appendChild(inputLocalEntrega);
                divContainer.appendChild(inputQuantidade);
                divContainer.appendChild(inputNumero)
                divContainer.appendChild(inputComplemento)
                divContainer.appendChild(inputCep)
                divContainer.appendChild(inputCidade)
                divContainer.appendChild(inputEstado)
                divContainer.appendChild(inputBairro)

                formulario.appendChild(divContainer);
            }

            const conteudo = document.getElementById('conteudo');
            conteudo.appendChild(formulario);
        }

       /* function salvarTodosFormularios(produtos) {
    const enderecos = [];

    produtos.forEach(produto => {
        let somaQuantidades = 0;
        let localEntrega;
        let quantidadeEntrega;
        let numeroEntrega; // Mova a declaração aqui

        for (let i = 0; i < produto.quantidade; i++) {
            const quantidadeEntregaInput = document.getElementById(`quantidadeEntrega_${produto.produtoId}_${i + 1}`);
            quantidadeEntrega = Number(quantidadeEntregaInput.value);
            const numeroEntregaInput = document.getElementById(`numeroEndereco_${produto.produtoId}_${i + 1}`);
            numeroEntrega = numeroEntregaInput.value;
            const cepEntregaInput = document.getElementById(`cep_${produto.produtoId}_${i + 1}`)
            cepEntrega = cepEntregaInput.value;
            const complementoEntregaInput = document.getElementById(`complemento_${produto.produtoId}_${i + 1}`);
            complementoEntrega = complementoEntregaInput.value;
            const inputCidadeEntrega = document.getElementById(`cidade_${produto.produtoId}_${i + 1}`)
            cidadeEntrega = inputCidadeEntrega.value;
            const inputEstadoEntrega = document.getElementById(`estado_${produto.produtoId}_${i + 1}`)
            estadoEntrega = inputEstadoEntrega.value;
            const inputBairroEntrega = document.getElementById(`bairro_${produto.produtoId}_${i + 1}`)
            bairroEntrega = inputBairroEntrega.value;

            somaQuantidades += quantidadeEntrega;

            if (i === 0) {
                const localEntregaInput = document.getElementById(`localEntrega_${produto.produtoId}_${i + 1}`);
                localEntrega = localEntregaInput.value;

                if (localEntrega.trim() === '' || quantidadeEntrega.toString().trim() === '' || numeroEntrega.trim() === '' || cepEntrega.trim() === '' || cidadeEntrega.trim() === '' || estadoEntrega.trim() === '' || bairroEntrega.trim() === '') {
                    alert('VAZIO');
                    return;
                }
            }
        }

        if (somaQuantidades !== produto.quantidade) {
            alert('Os valores não correspondem à quantidade total do produto.');
            return;
        }

        enderecos.push({
            produtoId: produto.produtoId,
            localEntrega,
            quantidadeEntrega,
            numeroEntrega,
            cepEntrega,
            complementoEntrega,
            cidadeEntrega,
            estadoEntrega,
            bairroEntrega,
        });
    });*/

    function salvarTodosFormularios(produtos) {
  const enderecos = [];

  produtos.forEach(produto => {
    for (let i = 0; i < produto.quantidade; i++) {
      const quantidadeEntregaInput = document.getElementById(`quantidadeEntrega_${produto.produtoId}_${i + 1}`);
      const numeroEntregaInput = document.getElementById(`numeroEndereco_${produto.produtoId}_${i + 1}`);
      const cepEntregaInput = document.getElementById(`cep_${produto.produtoId}_${i + 1}`);
      const complementoEntregaInput = document.getElementById(`complemento_${produto.produtoId}_${i + 1}`);
      const inputCidadeEntrega = document.getElementById(`cidade_${produto.produtoId}_${i + 1}`);
      const inputEstadoEntrega = document.getElementById(`estado_${produto.produtoId}_${i + 1}`);
      const inputBairroEntrega = document.getElementById(`bairro_${produto.produtoId}_${i + 1}`);
      const localEntregaInput = document.getElementById(`localEntrega_${produto.produtoId}_${i + 1}`);

      const quantidadeEntrega = Number(quantidadeEntregaInput.value);
      const numeroEntrega = numeroEntregaInput.value;
      const cepEntrega = cepEntregaInput.value;
      const complementoEntrega = complementoEntregaInput.value;
      const cidadeEntrega = inputCidadeEntrega.value;
      const estadoEntrega = inputEstadoEntrega.value;
      const bairroEntrega = inputBairroEntrega.value;
      const localEntrega = localEntregaInput.value;

      // Verifica se algum campo está vazio
      if (localEntrega.trim() === '' || quantidadeEntrega.toString().trim() === '' || numeroEntrega.trim() === '' || cepEntrega.trim() === '' || cidadeEntrega.trim() === '' || estadoEntrega.trim() === '' || bairroEntrega.trim() === '') {
        //alert('Preencha todos os campos do endereço.');
        return;
      }

      // Calcula a soma das quantidades
      const somaQuantidades = produtos.reduce((acc, prod) => acc + prod.quantidade, 0);

      // Verifica se a soma das quantidades é igual à quantidade total do produto
      if (somaQuantidades !== produto.quantidade) {
        alert('Os valores não correspondem à quantidade total do produto.');
        return;
      }

      // Adiciona o endereço ao array
      enderecos.push({
        produtoId: produto.produtoId,
        localEntrega,
        quantidadeEntrega,
        numeroEntrega,
        cepEntrega,
        complementoEntrega,
        cidadeEntrega,
        estadoEntrega,
        bairroEntrega,
      });
    }
  });

    fetch('/salvar-enderecos', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  body: JSON.stringify(enderecos), // Não use { enderecos }
})
  .then(response => {
    if (!response.ok) {
      throw new Error('Erro ao salvar endereços no servidor');
    }
    return response.json();
  })
  .then(data => {
    console.log('Endereços salvos com sucesso:', data);
    // Faça algo com a resposta do servidor, se necessário
  })
  .catch(error => {
    console.error('Erro durante a solicitação ao servidor:', error);
  });
    console.log(enderecos);
}


        carregarProdutosCarrinho();
    });
    </script>
</body>
</html>


[NODEJS]

app.post('/salvar-enderecos', (req, res) => {
  const enderecos = req.body;

  // Certifique-se de que 'enderecos' é um array
  if (!Array.isArray(enderecos)) {
    return res.status(400).json({ mensagem: 'A solicitação deve conter um array de endereços' });
  }

  // Recupera o carrinho da sessão
  const carrinho = req.session.carrinho || [];

  // Itera sobre cada endereço no array
  enderecos.forEach(endereco => {
    // Encontra o produto correspondente no carrinho
    const produtoNoCarrinho = carrinho.find(prod => prod.produtoId === endereco.produtoId);

    // Se o produto existir no carrinho
    if (produtoNoCarrinho) {
      // Atualiza a quantidade do produto no carrinho com base na quantidade do endereço
      produtoNoCarrinho.quantidade -= endereco.quantidadeEntrega;

      // Remove o produto do carrinho se a quantidade for zero ou negativa
      if (produtoNoCarrinho.quantidade <= 0) {
        const index = carrinho.indexOf(produtoNoCarrinho);
        carrinho.splice(index, 1);
      }

      // Adiciona novos produtos ao carrinho com base na quantidade do endereço
      for (let i = 0; i < endereco.quantidadeEntrega; i++) {
        carrinho.push({
          ...produtoNoCarrinho,
          quantidade: 1,  // Define a quantidade como 1 para cada novo produto
        });
      }
    }
  });

  // Atualiza a sessão com o carrinho modificado
  req.session.carrinho = carrinho;

  // Mapeia os endereços para a estrutura desejada (como você já fez)
  const enderecosSalvos = enderecos.map(endereco => ({
    enderecoCad: endereco.localEntrega,
    numCad: endereco.numeroEntrega,
    compCad: endereco.complementoEntrega,
    bairroCad: endereco.bairroEntrega,
    cepCad: endereco.cepEntrega,
    cidadeCad: endereco.cidadeEntrega,
    estadoCad: endereco.estadoEntrega,
    quantidade: endereco.quantidadeEntrega,
    produtosCad: endereco.produtoId,
  }));

  // Salva os endereços na sessão
  req.session.endereco = enderecosSalvos;

  console.log('Endereços Salvos na Sessão:', enderecosSalvos);
  console.log('Carrinho atualizado:', carrinho);

  // Responder ao cliente (opcional)
  res.json({ mensagem: 'Endereços e Carrinho atualizados com sucesso' });
});
