import type { ApiEventName, SettingsContent } from '@cloudcommerce/types';
import { BaseConfig } from '@cloudcommerce/config';
declare const mergeConfig: {
    hello: string;
    httpsFunctionOptions: {
        region: string;
        memory: "128MB" | "256MB" | "512MB" | "1GB" | "2GB";
    };
    ssrFunctionOptions: {
        region: string;
        memory: "256MiB" | "512MiB" | "1GiB" | "2GiB" | "4GiB";
        timeoutSeconds: number;
        minInstances: number;
    };
    modulesFunctionOptions: {
        memory: "256MiB" | "512MiB" | "1GiB" | "2GiB";
    };
    apiEvents: {
        delayedMs: number;
        disabledEvents: ApiEventName[];
    };
    apps: {
        discounts: {
            appId: number;
        };
        correios: {
            appId: number;
        };
        customShipping: {
            appId: number;
        };
        frenet: {
            appId: number;
            events: ApiEventName[];
        };
        tinyErp: {
            appId: number;
            events: ApiEventName[];
        };
        mercadoPago: {
            appId: number;
        };
        emails: {
            appId: number;
            events: ApiEventName[];
        };
        pagarMe: {
            appId: number;
        };
        pix: {
            appId: number;
        };
        jadlog: {
            appId: number;
        };
        galaxPay: {
            appId: number;
            events: ApiEventName[];
        };
        customPayment: {
            appId: number;
        };
        loyaltyPoints: {
            appId: number;
            events: ApiEventName[];
        };
        fbConversions: {
            appId: number;
            events: ApiEventName[];
        };
        datafrete: {
            appId: number;
        };
        googleAnalytics: {
            appId: number;
            events: ApiEventName[];
        };
        pagHiper: {
            appId: number;
        };
        melhorEnvio: {
            appId: number;
            events: ApiEventName[];
        };
        webhooksApp: {
            appId: number;
            events: ApiEventName[];
        };
        affiliateProgram: {
            appId: number;
            events: ApiEventName[];
        };
        flashCourier: {
            appId: number;
        };
        mandae: {
            appId: number;
        };
        pagarMeV5: {
            appId: number;
            events: ApiEventName[];
        };
    };
    settingsContent: SettingsContent;
    metafields: {};
};
declare const _default: {
    get(): BaseConfig & typeof mergeConfig & {
        metafields: Record<string, any>;
    };
    set(config: any): void;
};
export default _default;
