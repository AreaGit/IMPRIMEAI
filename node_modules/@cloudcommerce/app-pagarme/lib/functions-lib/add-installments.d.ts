import type { ListPaymentsResponse } from '@cloudcommerce/types';
type Gateway = ListPaymentsResponse['payment_gateways'][number];
declare const addInstallments: (finalTotal: number | undefined, installments: {
    [key: string]: any;
}, gateway: Gateway, response?: ListPaymentsResponse, initialTotal?: number, isDiscountInOneParcel?: boolean) => {
    response: ListPaymentsResponse | undefined;
    gateway: {
        label: string;
        text?: string | undefined;
        icon?: string | undefined;
        intermediator?: {
            name?: string | undefined;
            link?: string | undefined;
            code: string;
        } | undefined;
        payment_url?: string | undefined;
        type?: "payment" | "recurrence" | undefined;
        payment_method: {
            code: "credit_card" | "banking_billet" | "online_debit" | "account_deposit" | "debit_card" | "balance_on_intermediary" | "loyalty_points" | "other";
            name?: string | undefined;
        };
        discount?: {
            apply_at?: "total" | "freight" | "subtotal" | undefined;
            type?: "percentage" | "fixed" | undefined;
            value?: number | undefined;
        } | undefined;
        card_companies?: string[] | undefined;
        installment_options?: {
            number: number;
            value: number;
            tax?: boolean | undefined;
        }[] | undefined;
        js_client?: {
            script_uri: string;
            fallback_script_uri?: string | undefined;
            onload_expression?: string | undefined;
            container_html?: string | undefined;
            transaction_promise?: string | undefined;
            cc_hash?: {
                function: string;
                is_promise?: boolean | undefined;
            } | undefined;
            cc_installments?: {
                function: string;
                is_promise?: boolean | undefined;
            } | undefined;
            cc_brand?: {
                function: string;
                is_promise?: boolean | undefined;
            } | undefined;
        } | undefined;
        fetch_when_selected?: boolean | undefined;
    };
};
export default addInstallments;
